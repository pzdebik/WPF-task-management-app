<Window x:Class="ToDoWpfApp.EditTask"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mw="clr-namespace:ToDoWpfApp.ViewModel"
        mc:Ignorable="d"
        Title="Edytuj Zadanie" Height="250" Width="500" WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <mw:TaskManager/>
    </Window.DataContext>

    <Window.Resources>
        <Style x:Name="buttonStyle" TargetType="Button">
            <Setter Property="Margin" Value="15"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Name="windowStyle" TargetType="Window">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox Text="{Binding Path=SelectedDate, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ControlTemplate x:Key="RoundedButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="RoundedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <GroupBox Header="Nowe zadanie" Margin="10,0,10,0" MinWidth="420"
                  Height="159" VerticalAlignment="Center">
            
            <Grid VerticalAlignment="Top" Height="135">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="21*"/>
                    <ColumnDefinition Width="101*"/>
                    <ColumnDefinition Width="199*"/>
                    <ColumnDefinition Width="146*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Nazwa zadania: " Margin="10,5,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                <TextBox Style="{DynamicResource RoundedTextBox}" 
                         x:Name="tbNewTaskName" 
                         Height="40"
                         Margin="10,30,10,0" 
                         VerticalAlignment="Top" 
                         Text="{Binding NewTaskName}" 
                         Grid.ColumnSpan="4"
                         FontSize="18"
                         VerticalContentAlignment="Center"
                         Padding="5,0,0,0"/>
                <Label Content="Priorytet: " Margin="10,77,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                <ComboBox x:Name="cbNewPriority" Margin="10,102,0,0" Width="120"
                          HorizontalAlignment="Left" VerticalAlignment="Top"
                          ItemsSource="{Binding Path=PriorityCollection}"
                          SelectedItem="{Binding Path=NewPriority}" Grid.ColumnSpan="3">
                </ComboBox>
                

                <Label Content="Termin realizacji: " Margin="11,77,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="2"/>
                <DatePicker x:Name="dpNewDate" Margin="11,102,0,0"
                            HorizontalAlignment="Left"
                            SelectedDate="{Binding StartDate}" Grid.Column="2" FirstDayOfWeek="Monday" Height="33" Cursor="Hand" VerticalAlignment="Top"/>
                <Button Template="{DynamicResource RoundedButton}" 
                        x:Name="updateButton"
                        Content="Zapisz"
                        Margin="0,93,10,0"
                        Width="120" Height="35"
                        Grid.Column="3" 
                        Background="#121212" Foreground="White" FontSize="14" FontFamily="Calibri" FontWeight="Bold"
                        Command="{Binding UpdateDoubleClickedTask}"/>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
